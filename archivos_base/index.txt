import { styleText } from "util";
import Controller from "./Controller.js";
import {{nombreModulo}}Router from "./{{nombreModulo}}Router.js";
import Model from "./Modelo.js";
import Repositorio from "./Repositorio.js";
import EventEmitter from "events";

export default class {{nombreModulo}}Modulo{
    private repositorio: Repositorio | null;
    private modelo: Model | null;
    private controlador: Controller | null;
    private router: {{nombreModulo}}Router | null;
    private readonly nombreModulo: string = "{{nombreModulo}}"
  //  private listenerId?: (...args: any[]) => void; // opcional, si vas a escuchar eventos
 

    constructor(private readonly emisorEventos: EventEmitter){
        this.modelo = new Model();
        this.repositorio = new Repositorio();
        this.controlador = new Controller(this.repositorio);
        this.router = new {{nombreModulo}}Router(this.controlador);
        this.iniciar();
    }

    /**
     * Inicializa el módulo. Registra un listener para el evento "evento_importante"
     * y emite un evento "modulo_iniciado" con un objeto que contiene el nombre del
     * módulo como dato.
     * @returns {void}
     */

    iniciar() {
         // Registrar un listener como ejemplo
//        this.listenerId = (datos) => {
//          console.log(`🔔 ${this.nombreModulo} recibió evento`, datos);
//        };

        //this.emisorEventos.on("evento_importante", this.listenerId);

        this.emisorEventos.emit("modulo_iniciado",
            styleText(["white", "bgGreen"], `${this.nombreModulo} iniciado`));
        }


    /**
     * Destruye la instancia del módulo y remueve el listener registrado.
     * @returns {void}
     */

      destruir() {
        console.log("DESTRUYENDO MODULO: ", this.nombreModulo);
        this.modelo = null;
        this.repositorio = null;
        this.controlador = null;
        this.router = null;
    }

}